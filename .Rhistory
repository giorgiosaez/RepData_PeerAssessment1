getwd()
setwd("~/R")
getwd()
setwd("~/R/RepData/")
setwd("~/R/RepData/RepData_PeerAssessment1/")
getwd()
setwd("~/R/RepData/RepData_PeerAssessment1"
)
getwd()
#data <- read.csv(destfile, header = TRUE, sep = ';', dec = '.')
destzip<- paste(wd,"/activity.zip");
unzip(zipfile = destzip, exdir = paste(wd,"./data")
unzip(zipfile = destzip, exdir = paste(wd,"/data")
unzip(zipfile = destzip, exdir = paste(wd,"/data"))
unzip(zipfile = destzip, exdir = paste(wd,"/data"))
unzip(zipfile = destzip, exdir = paste(wd,"/data"))
wd <-"~/R/RepData/RepData_PeerAssessment1"
paste(wd,"/data"
)
destzip<- paste0(wd,"/activity.zip");
destfile <- paste0(wd,"/data/activity.csv");
)
if (!file.exists(destfile) ){
unzip(zipfile = destzip, exdir = paste0(wd,"/data"))
}
#data <- read.csv(destfile, header = TRUE, sep = ';', dec = '.')
```
## What is mean total number of steps taken per day?
## What is the average daily activity pattern?
## Imputing missing values
## Are there differences in activity patterns between weekdays and weekends?
```
## What is mean total number of steps taken per day?
## What is the average daily activity pattern?
## Imputing missing values
## Are there differences in activity patterns between weekdays and weekends?
wd <-"~/R/RepData/RepData_PeerAssessment1"
if(!file.exists(wd)){dir.create(wd)}
if (getwd()!=wd) {setwd(wd) }
if(!file.exists("./data")){dir.create("./data")}
destzip<- paste0(wd,"/activity.zip");
destfile <- paste0(wd,"/data/activity.csv");
if (!file.exists(destfile) ){
unzip(zipfile = destzip, exdir = paste0(wd,"/data"))
}
data <- read.csv(destfile, header = TRUE)
head(data)
}
data <- read.csv(destfile, header = TRUE, skipNul = T)
head(data)
data[,"steps"=NA]
data["steps"=NA]
data["steps"="NA"]
data[data$steps"="NA"]
data[data$steps="NA"]
data[,data$steps="NA"]
data <- read.csv(destfile, header = TRUE, skipNul = T)
tidyData <- data[!rowSums(is.na(data[data$steps])), ]
data[data$steps]
data <- read.table(destfile, header = TRUE, skipNul = T)
data <- read.table(destfile, header = TRUE)
data <- read.table(destfile)
data <- read.table(destfile,sep = ',')
head(data)
tidyData <- data[!rowSums(is.na(data[data$steps])), ]
head(tidyData)
tidyData <- data[!(data[data$steps]) ]
data <- read.table(destfile,sep = ',')
data[data$steps]
data <- read.csv(destfile, header = TRUE, skipNul = T)
tidyData <- data[!(data[data$steps]) ]
tidyData <- data[!(data[,data$steps]) ]
tidyData <- data[!(data[data$steps,]) ]
subset(data, data$steps="NA")
subset(data, data$steps=="NA")
data <- read.csv(destfile, header = TRUE, skipNul = T)
subset(data, data$steps=="NA")
subset(data, steps=="NA")
subset(data, steps==NA)
data
data <- read.csv(destfile, header = TRUE, skipNul = T, na.strings = c("NA","NULL") )
head(data)
tidyData <- subset(data, is.na(data$steps))
head(tidyData)
data <- read.csv(destfile, header = TRUE, skipNul = T, na.strings = c("NA","NULL") )
#new_DF <- subset(DF, is.na(DF$Var2))
tidyData <- subset(data, is.na(data$steps))
head(tidyData)
tidyData
tidyData <- subset(data, !is.na(data$steps))
tidyData
mean(tidyData$Steps)
tidyData <- as.numeric(subset(data, !is.na(data$steps)))
mean(as.numeric(tidyData$Steps))
tidyData$Steps
tidyData$steps
mean((tidyData$steps))
median(tidyData$steps)
hist(tidyData$steps)
summary(tidyData$steps)
mean(as.numeric(tidyData$teps))
plot(tidyData$steps,tidyData$interval)
plot(tidyData$interval,tidyData$steps,type = 'l')
head(tidyData)
plot(tidyData$date,tidyData$steps,type = 'l')
plot(tidyData$date,tidyData$steps,type = 'l')
View(tidyData)
plot(tidyData$interval,tidyData$steps,type = 'l')
plot(tidyData$interval,tidyData$steps)
hist(tidyData$steps)
hist(tidyData$date,tidyData$steps)
hist(tidyData$steps)
hist(tidyData$steps,)
dataTable = data.table(data)
datByDate = dataTable[, list(total_steps = sum(steps, na.rm = T)),
by = date]
dataTable <- data.table(data)
datByDate = dataTable[, list(total_steps = sum(steps, na.rm = T)),
by = date]
dataTable <- data.table(data)
library("data.frame")
install.packages("data.frame")
install.packages("data.table")
library("data.table")
dataTable = data.table(data)
datByDate = dataTable[, list(total_steps = sum(steps, na.rm = T)),
by = date]
View(datByDate)
View(datByDate)
dataByDate = dataTable[, list(total_steps = sum(steps, na.rm = T)),
by = date]
hist(dataByTable)
hist(dataByDate)
dataByDate = dataTable[, list(total_steps = sum(steps, na.rm = T)),
by = date]
hist(dataByDate)
hist(dataByDate$total_steps)
hist(dataByDate$total_steps,breaks = 100)
View(dataByDate)
hist(dataByDate$total_steps,breaks = 61)
hist(dataByDate$total_steps,breaks = 60)
hist(dataByDate$total_steps,breaks = 20)
hist(dataByDate$total_steps)
hist(dataByDate$, xlab = 'Total Number of Steps', cex.main = .9)
hist(dataByDate$steps, xlab = 'Total Number of Steps', cex.main = .9)
#caluclate mean and median
hist(dataByDate$steps, xlab = 'Total Number of Steps', cex.main = .9)
hist(dataByDate$total_steps, xlab = 'Total Number of Steps', cex.main = .9)
hist(dataByDate$total_steps)
hist(dataByDate$total_steps, xlab = 'Total Number of Steps')
mean = round(mean(x), 1)
median = median(dataByDate$steps)
#place lines for mean and median on histogram
mean = mean(dataByDate$steps)
median = median(dataByDate$steps)
#place lines for mean and median on histogram
abline(v=mean, lwd = 3, col = 'red')
abline(v=median, lwd = 3, col = 'black')
hist(dataByDate$steps, xlab = 'Total Number of Steps')
mean = mean(dataByDate$steps)
median = median(dataByDate$steps)
#place lines for mean and median on histogram
hist(dataByDate$steps, xlab = 'Total Number of Steps')
mean = mean(dataByDate$steps)
median = median(dataByDate$steps)
#place lines for mean and median on histogram
abline(v=mean, lwd = 3, col = 'red')
abline(v=median, lwd = 3, col = 'black')
legend('topright', col = c("red", "black"),
mean <- mean(dataByDate$steps)
median <- median(dataByDate$steps)
total_steps
hist(dataByDate$total_steps, xlab = 'Total Number of Steps')
mean <- mean(dataByDate$total_steps)
median <- median(dataByDate$total_steps)
#place lines for mean and median on histogram
abline(v=mean, lwd = 3, col = 'red')
abline(v=median, lwd = 3, col = 'black')
legend('topright', col = c("red", "black"),
legend = c(paste('Mean: ', mean),
paste('Median: ', median))
)
```
legend('topright',lty = 1, col = c("red", "black"),
legend = c(paste('Mean: ', mean),
paste('Median: ', median))
)
```
hist(dataByDate$total_steps, xlab = 'Total Number of Steps', breaks = 100)
mean <- mean(dataByDate$total_steps)
median <- median(dataByDate$total_steps)
#place lines for mean and median on histogram
abline(v=mean, lwd = 3, col = 'red')
abline(v=median, lwd = 3, col = 'black')
legend('topright',lty = 1, col = c("red", "black"),
legend = c(paste('Mean: ', mean),
paste('Median: ', median))
)
```
mean <- round(mean(dataByDate$total_steps),1)
median <- median(dataByDate$total_steps)
#place lines for mean and median on histogram
abline(v=mean, lwd = 3, col = 'red')
abline(v=median, lwd = 3, col = 'black')
legend('topright',lty = 1, col = c("red", "black"),
legend = c(paste('Mean: ', mean),
paste('Median: ', median))
)
hist(dataByDate$total_steps, xlab = 'Total Number of Steps', breaks = 50)
mean <- round(mean(dataByDate$total_steps),1)
median <- median(dataByDate$total_steps)
#place lines for mean and median on histogram
abline(v=mean, lwd = 3, col = 'red')
abline(v=median, lwd = 3, col = 'black')
legend('topright',lty = 1, col = c("red", "black"),
legend = c(paste('Mean: ', mean),
paste('Median: ', median))
paste('Median: ', median)))
```
## What is the average daily activity pattern?
## Imputing missing values
## Are there differences in activity patterns between weekdays and weekends?
legend('topright',lty = 1, col = c("red", "black"),
legend = c(paste('Mean: ', mean),
paste('Median: ', median)))
```
hist(dataByDate$total_steps, xlab = 'Total Number of Steps', breaks = 50, main = "Total Steps"")
mean <- round(mean(dataByDate$total_steps),1)
hist(dataByDate$total_steps, xlab = 'Total Number of Steps', breaks = 50, main = "Total Steps"")
mean <- round(mean(dataByDate$total_steps),1)
xlab
xlab
xlab
xlab
xlab
xlab
xlab
xlab
xlab
xlab
hist(dataByDate$total_steps, xlab = 'Total Number of Steps', breaks = 50, main = "Total Steps"")
mean <- round(mean(dataByDate$total_steps),1)
median <- median(dataByDate$total_steps)
#place lines for mean and median on histogram
abline(v=mean, lwd = 3, col = 'red')
abline(v=median, lwd = 3, col = 'black')
legend('topright',lty = 1, col = c("red", "black"),
hist(dataByDate$total_steps, xlab = 'Total Number of Steps', breaks = 50, main = "Total Steps")
mean <- round(mean(dataByDate$total_steps),1)
median <- median(dataByDate$total_steps)
#place lines for mean and median on histogram
abline(v=mean, lwd = 3, col = 'red')
abline(v=median, lwd = 3, col = 'black')
legend('topright',lty = 1, col = c("red", "black"),
legend = c(paste('Mean: ', mean),
paste('Median: ', median)))
hist(dataByDate$total_steps, xlab = 'Total Number of Steps', breaks = 50, main = "Total Steps taken per day")
hist(dataByDate$total_steps, xlab = 'Total Number of Steps', breaks = 61, main = "Total Steps taken per day")
mean <- round(mean(dataByDate$total_steps),1)
median <- median(dataByDate$total_steps)
#place lines for mean and median on histogram
abline(v=mean, lwd = 3, col = 'red')
abline(v=median, lwd = 3, col = 'black')
legend('topright',lty = 1, col = c("red", "black"),
legend = c(paste('Mean: ', mean),
paste('Median: ', median)))
```
hist(dataByDate$total_steps, xlab = 'Total Number of Steps', breaks = 81, main = "Total Steps taken per day")
hist(dataByDate$total_steps, xlab = 'Total Number of Steps', breaks = 30, main = "Total Steps taken per day")
mean <- round(mean(dataByDate$total_steps),1)
median <- median(dataByDate$total_steps)
#place lines for mean and median on histogram
abline(v=mean, lwd = 3, col = 'red')
abline(v=median, lwd = 3, col = 'black')
legend('topright',lty = 1, col = c("red", "black"),
legend = c(paste('Mean: ', mean),
paste('Median: ', median)))
```
mean <- mean(dataByDate$total_stepssteps)
dataByDate = dataTable[, list(total_steps = sum(steps, na.rm = T)),
by = dataTable$interval]
dataByInterval = dataTable[, list(total_steps = sum(steps, na.rm = T)),
by = dataTable$interval]
dataByInterval = dataTable[, list(total_steps = sum(steps, na.rm = T)),
by = interval]
head(dataByInterval)
plot(dataByInterval$interval,dataByInterval$total_steps)
plot(dataByInterval$interval,dataByInterval$total_steps, type = "l")
plot(dataByInterval$interval,dataByInterval$average, type = "l",
main = "Average Steps by Time Interval",
xlab = '5 Minute Time Interval',
ylab = 'Average')
dataByInterval = dataTable[, list(average = mean(steps, na.rm = T)),
by = interval]
plot(dataByInterval$interval,dataByInterval$average, type = "l",
main = "Average Steps by Time Interval",
xlab = '5 Minute Time Interval',
ylab = 'Average')
max_steps
max_steps
max_steps
## What is the average daily activity pattern?
dataByInterval = dataTable[, list(average = mean(steps, na.rm = T)),
by = interval]
plot(dataByInterval$interval,dataByInterval$average, type = "l",
main = "Average Steps by Time Interval",
xlab = '5 Minute Time Interval',
ylab = 'Average')
maxAverage = dataByInterval[which.max(avg_steps), ]
#Add Label To Annotate Maximum # Steps And Interval
legend("topright",
legend = paste("The 5-minute interval that, on average, contains the maximum number of steps is the number: ", max_steps$interval)
)
legend("topright",
legend = paste("The 5-minute interval that, on average, contains the maximum number of steps is the number: ", maxAverage$interval)
)
maxAverage = dataByInterval[which.max(avg_steps), ]
maxAverage = dataByInterval[which.max(dataByInterval$average), ]
#Add Label To Annotate Maximum # Steps And Interval
legend("topright",
legend = paste("The 5-minute interval that, on average, contains the maximum number of steps is the number: ", maxAverage$interval)
)
legend("topright",
legend = paste("The 5-minute interval with maximum number of steps is the number: ", maxAverage$interval)
)
legend("topright",
legend = paste("The 5-minute interval with maximum number of steps is the number: ", maxAverage$interval),
legend("topright",
legend = paste("The 5-minute interval with maximum number of steps is the number: ", maxAverage$interval),cex = .7
)
plot(dataByInterval$interval,dataByInterval$average, type = "l",
main = "Average Steps by Time Interval",
xlab = '5 Minute Time Interval',
ylab = 'Average')
legend("topright",
legend = paste("The 5-minute interval with maximum number of steps is the number: ", dataByInterval[which.max(dataByInterval$average), ]$interval), cex = .7
)
hist(dataByDate$total_steps, xlab = 'Total Number of Steps', breaks = 30, main = "Total Steps taken per day")
mean <- round(mean(dataByDate$total_steps),1)
median <- median(dataByDate$total_steps)
#place lines for mean and median on histogram
abline(v=mean, lwd = 3, col = 'red')
abline(v=median, lwd = 3, col = 'black')
legend('topright',lty = 1, col = c("red", "black"),
legend = c(paste('Mean: ', mean),
paste('Median: ', median)))
```
data <- read.csv(destfile, header = TRUE, skipNul = T, na.strings = c("NA","NULL") )
tidyData <- (subset(data, !is.na(data$steps)))
library("data.table")
dataTable = data.table(data)
dataByDate = dataTable[, list(total_steps = sum(steps, na.rm = T)),
by = date]
hist(dataByDate$total_steps, xlab = 'Total Number of Steps', breaks = 30, main = "Total Steps taken per day")
steps
dataByInterval = dataTable[, list(average = mean(steps, na.rm = T)),
by = interval]
dataByInterval = dataTable[, list(average = mean(steps, na.rm = T)),
by = interval]
plot(dataByInterval$interval,dataByInterval$average, type = "l",
main = "Average Steps by Time Interval",
xlab = '5 Minute Time Interval',
ylab = 'Average')
legend("topright",
legend = paste("The 5-minute interval with maximum number of steps is the number: ", dataByInterval[which.max(dataByInterval$average), ]$interval), cex = .7
)
dataByInterval = dataTable[, list(average = mean(steps, na.rm = T)),
by = interval]
